{"version":3,"sources":["todos/TodoForm.js","todos/TodoItem.js","todos/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoForm","addTodo","React","useState","value","setValue","onSubmit","e","preventDefault","type","className","onChange","target","TodoItem","todo","index","completeTodo","removeTodo","style","textDecoration","isCompleted","text","onClick","TodoList","todos","setTodos","newTodos","splice","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qNAwBeA,MAtBf,YAAgC,IAAZC,EAAW,EAAXA,QAAW,EACDC,IAAMC,SAAS,IADd,mBACpBC,EADoB,KACbC,EADa,KAU3B,OACI,sBAAMC,SARW,SAAAC,GACjBA,EAAEC,iBACGJ,IACLH,EAAQG,GACRC,EAAS,MAIT,SACI,uBACII,KAAK,OACLC,UAAU,QACVN,MAAOA,EACPO,SAAU,SAAAJ,GAAC,OAAIF,EAASE,EAAEK,OAAOR,aCDlCS,MAff,YAA8D,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,MAAOC,EAA4B,EAA5BA,aAAcC,EAAc,EAAdA,WAC7C,OACE,sBACEP,UAAU,OACVQ,MAAO,CAAEC,eAAgBL,EAAKM,YAAc,eAAiB,IAF/D,UAIGN,EAAKO,KACN,gCACE,wBAAQC,QAAS,kBAAMN,EAAaD,IAApC,kBACA,wBAAQO,QAAS,kBAAML,EAAWF,IAAlC,sBC0COQ,MAjDf,WAAqB,IAAD,EACUrB,IAAMC,SAAS,CACrC,CACIkB,KAAM,oBACND,aAAa,GAEjB,CACIC,KAAM,wBACND,aAAa,GAEjB,CACIC,KAAM,6BACND,aAAa,KAZL,mBACTI,EADS,KACFC,EADE,KAqBVT,EAAe,SAAAD,GACjB,IAAMW,EAAQ,YAAOF,GACrBE,EAASX,GAAOK,aAAc,EAC9BK,EAASC,IAGPT,EAAa,SAAAF,GACf,IAAMW,EAAQ,YAAOF,GACrBE,EAASC,OAAOZ,EAAO,GACvBU,EAASC,IAGb,OACI,sBAAKhB,UAAU,YAAf,UACKc,EAAMI,KAAI,SAACd,EAAMC,GAAP,OACP,cAAC,EAAD,CAEIA,MAAOA,EACPD,KAAMA,EACNE,aAAcA,EACdC,WAAYA,GAJPF,MAOb,cAAC,EAAD,CAAUd,QA5BF,SAAAoB,GACZ,IAAMK,EAAQ,sBAAOF,GAAP,CAAc,CAAEH,UAC9BI,EAASC,UCVFG,MARf,WACE,OACE,qBAAKnB,UAAU,MAAf,SACE,cAAC,EAAD,OCKSoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2cfcfc8d.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction TodoForm({ addTodo }) {\n    const [value, setValue] = React.useState(\"\");\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (!value) return;\n        addTodo(value);\n        setValue(\"\");\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                className=\"input\"\n                value={value}\n                onChange={e => setValue(e.target.value)}\n            />\n        </form>\n    );\n}\n\nexport default TodoForm;","import React from \"react\";\n\nfunction TodoItem({ todo, index, completeTodo, removeTodo }) {\n  return (\n    <div\n      className=\"todo\"\n      style={{ textDecoration: todo.isCompleted ? \"line-through\" : \"\" }}\n    >\n      {todo.text}\n      <div>\n        <button onClick={() => completeTodo(index)}>Done</button>\n        <button onClick={() => removeTodo(index)}>x</button>\n      </div>\n    </div>\n  );\n}\n\nexport default TodoItem","import React from \"react\";\nimport TodoForm from \"./TodoForm\";\nimport TodoItem from \"./TodoItem\";\n\nfunction TodoList() {\n    const [todos, setTodos] = React.useState([\n        {\n            text: \"Learn about React\",\n            isCompleted: false\n        },\n        {\n            text: \"Meet friend for lunch\",\n            isCompleted: false\n        },\n        {\n            text: \"Build really cool todo app\",\n            isCompleted: false\n        }\n    ]);\n\n    const addTodo = text => {\n        const newTodos = [...todos, { text }];\n        setTodos(newTodos);\n    };\n\n    const completeTodo = index => {\n        const newTodos = [...todos];\n        newTodos[index].isCompleted = true;\n        setTodos(newTodos);\n    };\n\n    const removeTodo = index => {\n        const newTodos = [...todos];\n        newTodos.splice(index, 1);\n        setTodos(newTodos);\n    };\n\n    return (\n        <div className=\"todo-list\">\n            {todos.map((todo, index) => (\n                <TodoItem\n                    key={index}\n                    index={index}\n                    todo={todo}\n                    completeTodo={completeTodo}\n                    removeTodo={removeTodo}\n                />\n            ))}\n            <TodoForm addTodo={addTodo} />\n        </div>\n    );\n}\n\nexport default TodoList;\n","import React from \"react\";\nimport \"./App.css\";\nimport TodoList from \"./todos/TodoList\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <TodoList></TodoList>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}